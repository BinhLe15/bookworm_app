"""update columns for all tables

Revision ID: cd3111fc7227
Revises: 7eb42d008fee
Create Date: 2025-04-18 16:11:46.662927

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa

import sqlmodel


# revision identifiers, used by Alembic.
revision: str = 'cd3111fc7227'
down_revision: Union[str, None] = '7eb42d008fee'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('book', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('book_id_seq'::regclass)"))
    op.alter_column('book', 'category_id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=True)
    op.alter_column('book', 'author_id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               nullable=True)
    op.alter_column('book', 'book_summary',
               existing_type=sa.VARCHAR(),
               type_=sa.Text(),
               existing_nullable=True)
    op.alter_column('book', 'book_price',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               type_=sa.Numeric(precision=5, scale=2),
               existing_nullable=False)
    op.drop_constraint('book_author_id_fkey', 'book', type_='foreignkey')
    op.drop_constraint('book_category_id_fkey', 'book', type_='foreignkey')
    op.alter_column('category', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('category_id_seq'::regclass)"))
    op.alter_column('discount', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('discount', 'book_id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=True)
    op.alter_column('discount', 'discount_price',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               type_=sa.Numeric(precision=5, scale=2),
               existing_nullable=False)
    op.drop_constraint('discount_book_id_fkey', 'discount', type_='foreignkey')
    op.alter_column('order', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('order_id_seq'::regclass)"))
    op.alter_column('order', 'order_amount',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               type_=sa.Numeric(precision=8, scale=2),
               existing_nullable=False)
    op.alter_column('orderitem', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('orderitem', 'order_id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=True)
    op.alter_column('orderitem', 'book_id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=True)
    op.alter_column('orderitem', 'quantity',
               existing_type=sa.INTEGER(),
               type_=sa.SmallInteger(),
               existing_nullable=False)
    op.alter_column('orderitem', 'price',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               type_=sa.Numeric(precision=5, scale=2),
               existing_nullable=False)
    op.drop_constraint('orderitem_book_id_fkey', 'orderitem', type_='foreignkey')
    op.drop_constraint('orderitem_order_id_fkey', 'orderitem', type_='foreignkey')
    op.alter_column('review', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('review', 'book_id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               nullable=True)
    op.alter_column('review', 'review_details',
               existing_type=sa.VARCHAR(),
               type_=sa.Text(),
               existing_nullable=True)
    op.drop_constraint('review_book_id_fkey', 'review', type_='foreignkey')
    op.add_column('user', sa.Column('first_name', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False))
    op.add_column('user', sa.Column('last_name', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False))
    op.add_column('user', sa.Column('password', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False))
    op.alter_column('user', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('user_id_seq'::regclass)"))
    op.drop_index('ix_user_email', table_name='user')
    op.drop_index('ix_user_username', table_name='user')
    op.create_unique_constraint(None, 'user', ['email'])
    op.drop_column('user', 'hashed_password')
    op.drop_column('user', 'username')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('user', sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('user', sa.Column('hashed_password', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'user', type_='unique')
    op.create_index('ix_user_username', 'user', ['username'], unique=True)
    op.create_index('ix_user_email', 'user', ['email'], unique=True)
    op.alter_column('user', 'id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('user_id_seq'::regclass)"))
    op.drop_column('user', 'password')
    op.drop_column('user', 'last_name')
    op.drop_column('user', 'first_name')
    op.create_foreign_key('review_book_id_fkey', 'review', 'book', ['book_id'], ['id'])
    op.alter_column('review', 'review_details',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(),
               existing_nullable=True)
    op.alter_column('review', 'book_id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               nullable=False)
    op.alter_column('review', 'id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True)
    op.create_foreign_key('orderitem_order_id_fkey', 'orderitem', 'order', ['order_id'], ['id'])
    op.create_foreign_key('orderitem_book_id_fkey', 'orderitem', 'book', ['book_id'], ['id'])
    op.alter_column('orderitem', 'price',
               existing_type=sa.Numeric(precision=5, scale=2),
               type_=sa.DOUBLE_PRECISION(precision=53),
               existing_nullable=False)
    op.alter_column('orderitem', 'quantity',
               existing_type=sa.SmallInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.alter_column('orderitem', 'book_id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=True)
    op.alter_column('orderitem', 'order_id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=True)
    op.alter_column('orderitem', 'id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('order', 'order_amount',
               existing_type=sa.Numeric(precision=8, scale=2),
               type_=sa.DOUBLE_PRECISION(precision=53),
               existing_nullable=False)
    op.alter_column('order', 'id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('order_id_seq'::regclass)"))
    op.create_foreign_key('discount_book_id_fkey', 'discount', 'book', ['book_id'], ['id'])
    op.alter_column('discount', 'discount_price',
               existing_type=sa.Numeric(precision=5, scale=2),
               type_=sa.DOUBLE_PRECISION(precision=53),
               existing_nullable=False)
    op.alter_column('discount', 'book_id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=True)
    op.alter_column('discount', 'id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('category', 'id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('category_id_seq'::regclass)"))
    op.create_foreign_key('book_category_id_fkey', 'book', 'category', ['category_id'], ['id'])
    op.create_foreign_key('book_author_id_fkey', 'book', 'author', ['author_id'], ['id'])
    op.alter_column('book', 'book_price',
               existing_type=sa.Numeric(precision=5, scale=2),
               type_=sa.DOUBLE_PRECISION(precision=53),
               existing_nullable=False)
    op.alter_column('book', 'book_summary',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(),
               existing_nullable=True)
    op.alter_column('book', 'author_id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               nullable=False)
    op.alter_column('book', 'category_id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=True)
    op.alter_column('book', 'id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('book_id_seq'::regclass)"))
    # ### end Alembic commands ###
